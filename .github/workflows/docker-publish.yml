name: docker-publish
on:
  workflow_call:
    inputs:
      imageId:
        required: true
        type: string
      version:
        required: true
        type: string
      dockerfilePath:
        required: false
        default: ./Dockerfile
        type: string
    secrets:
      DOCKER_REGISTRY_URL:
        required: true
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      CI_NPM_TOKEN:
        required: false

jobs:
  publish:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: .
      env:
        npm_token: ${{ secrets.CI_NPM_TOKEN }}
      steps:
        - name: "Checkout"
          uses: actions/checkout@v2

        - name: "Setup node"
          if: ${{ env.npm_token != '' }}
          uses: actions/setup-node@v2
          with:
            node-version: '16.x'

        - name: "Setup npm"
          if: ${{ env.npm_token != '' }}
          run: |
            npm set @proxima-one:registry=https://npm.pkg.github.com
            npm set "//npm.pkg.github.com/:_authToken=${{ env.npm_token }}"

        - name: "Docker Login"
          run: docker login -u="${{ secrets.DOCKER_USERNAME }}" -p="${{ secrets.DOCKER_PASSWORD }}" ${{ secrets.DOCKER_REGISTRY_URL }}

        - name: "Write .netrc"
          run: echo "machine github.com login ${{ secrets.PROXIMA_GITHUB_USER }} password ${{ secrets.PROXIMA_GITHUB_TOKEN }}" > $HOME/.netrc

        - name: "Build Image"
          if: ${{ env.npm_token == '' }}
          run: |
            DOCKER_BUILDKIT=1 docker build . --build-arg BUILD_VERSION=${{ inputs.version }} --tag image --file ${{ inputs.dockerfilePath }} --target prod --progress=plain --secret id=netrc,src=$HOME/.netrc

        - name: "Build Image"
          if: ${{ env.npm_token != '' }}
          run: |
            DOCKER_BUILDKIT=1 docker build . --build-arg BUILD_VERSION=${{ inputs.version }} --tag image --file ${{ inputs.dockerfilePath }} --target prod --progress=plain --secret id=npmrc,src=$HOME/.npmrc --secret id=netrc,src=$HOME/.netrc

        - name: "Push image"
          run: |
            docker tag image ${{ secrets.DOCKER_REGISTRY_URL }}${{ inputs.imageId }}
            docker push ${{ secrets.DOCKER_REGISTRY_URL }}${{ inputs.imageId }}
