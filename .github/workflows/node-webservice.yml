name: node-webservice
on:
  workflow_call:
    inputs:
      appName:
        required: true
        type: string
      publish:
        required: false
        default: false
        type: boolean
      preview:
        required: false
        default: false
        type: boolean
      deploy:
        required: false
        default: false
        type: boolean
      pulumiPath:
        required: false
        default: ./deploy
        type: string
      pulumiStack:
        required: false
        default: proxima-one/web-services
        type: string
      tagMessage:
        required: false
        default: "Release"
        type: string
      dockerfilePath:
        required: false
        default: ./deployment/Dockerfile
        type: string
      dockerRepo:
        required: false
        default: proxima.one/services
        type: string
    secrets:
      CI_NPM_TOKEN:
        required: false
      DOCKER_REGISTRY_URL:
        required: false
      DOCKER_USERNAME:
        required: false
      DOCKER_PASSWORD:
        required: false
      GOOGLE_CREDENTIALS:
        required: false
      PULUMI_ACCESS_TOKEN:
        required: false
jobs:
  quick-check:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          cache: 'yarn'

      - name: "Setup npm"
        run: |
          npm set @proxima-one:registry=https://npm.pkg.github.com
          npm set "//npm.pkg.github.com/:_authToken=${{ secrets.CI_NPM_TOKEN }}"

      - name: Install Dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test

  version:
    if: ${{ inputs.publish }}
    runs-on: ubuntu-latest
    needs: quick-check
    outputs:
      version: ${{ steps.version.outputs.VERSION }}
      imageTag: ${{ steps.version.outputs.IMAGE_TAG }}
      imageFullName: ${{ steps.version.outputs.IMAGE_FULL_NAME }}
      imageId: ${{ steps.version.outputs.IMAGE_ID }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Read Version"
        id: version
        run: |
          VERSION=$(cat ./VERSION)
          if [ "${{ inputs.preview }}" = "true" ]; then
            IMAGE_TAG=${{ inputs.appName }}-$VERSION-${GITHUB_SHA::7}
          else
            IMAGE_TAG=${{ inputs.appName }}-$VERSION
          fi

          IMAGE_ID=/${{ inputs.dockerRepo }}
          IMAGE_FULL_NAME=$IMAGE_ID:$IMAGE_TAG

          echo VERSION=$VERSION
          echo IMAGE_ID=$IMAGE_ID
          echo IMAGE_TAG=$IMAGE_TAG
          echo IMAGE_FULL_NAME=$IMAGE_FULL_NAME

          echo "::set-output name=VERSION::$VERSION"
          echo "::set-output name=IMAGE_TAG::$IMAGE_TAG"
          echo "::set-output name=IMAGE_FULL_NAME::$IMAGE_FULL_NAME"
          echo "::set-output name=IMAGE_ID::$IMAGE_ID"

  publish:
    if: ${{ inputs.publish }}
    needs: version
    uses: proxima-one/github-workflows/.github/workflows/node-docker-publish.yml@master
    with:
      imageId: ${{ needs.version.outputs.imageFullName }}
      version: ${{ needs.version.outputs.version }}
      dockerfilePath: ${{ inputs.dockerfilePath }}
    secrets:
      DOCKER_REGISTRY_URL: ${{ secrets.DOCKER_REGISTRY_URL }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      CI_NPM_TOKEN: ${{ secrets.CI_NPM_TOKEN }}

  comment:
    if: ${{ inputs.publish && github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [version, publish]
    steps:
      - name: Comment a version
        uses: mb2dev/github-action-comment-pull-request@1.0.0
        with:
          message: |
            Released new version.

            App: ${{ inputs.appName }}
            Version: ${{ needs.version.outputs.imageTag }}
            Image: ${{ needs.version.outputs.imageFullName }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    if: ${{ inputs.deploy }}
    name: Pulumi ${{ (inputs.preview && 'Preview') || 'Up' }}
    runs-on: ubuntu-latest
    needs: [version, publish]
    steps:
      - name: Checkout latest changes
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install dependencies
        run: npm install
        working-directory: ${{ inputs.pulumiPath }}

      - name: GCP Auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Pulumi preview changes
        if: ${{ inputs.preview }}
        uses: pulumi/actions@v3
        with:
          work-dir: ${{ inputs.pulumiPath }}
          command: preview
          stack-name: ${{ inputs.pulumiStack }}
          comment-on-pr: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          IMAGE_NAME: ${{ secrets.DOCKER_REGISTRY_URL }}/${{ inputs.dockerRepo}}:${{needs.version.outputs.imageTag}}
          VERSION: ${{needs.version.outputs.version}}

      - name: Pulumi apply changes
        if: ${{ !inputs.preview }}
        uses: pulumi/actions@v3
        with:
          work-dir: ${{ inputs.pulumiPath }}
          command: up
          stack-name: ${{ inputs.pulumiStack }}
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          IMAGE_NAME: ${{ secrets.DOCKER_REGISTRY_URL }}/${{ inputs.dockerRepo}}:${{needs.version.outputs.imageTag}}
          VERSION: ${{needs.version.outputs.version}}
